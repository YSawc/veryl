module Module07 {
    var a  : logic;
    var aa : logic;
    var clk: logic;

    always_comb {
        // assignment statement
        a =    1;
        a +=   1;
        a -=   1;
        a *=   1;
        a /=   1;
        a %=   1;
        a &=   1;
        a |=   1;
        a ^=   1;
        a <<=  1;
        a >>=  1;
        a <<<= 1;
        a >>>= 1;

        // if statement
        if a {
            a  = 1;
            aa = 1;
        } else if a {
            a  = 1;
            aa = 1;
        } else {
            a  = 1;
            aa = 1;
        }

        // for statement
        for i: u32 in 0..10 {
            a  = i;
            aa = i + 1;
        }

        // for statement with closed range
        for i: u32 in 0..=10 {
            a  = i;
            aa = i + 1;
        }

        // for statement with custom step
        for i: u32 in 0..10 step += 2 {
            a  = i;
            aa = i + 1;
        }
        for i: u32 in 0..10 step *= 2 {
            a  = i;
            aa = i + 1;
        }

        #(1);
        #(a);
    }

    always_ff (clk) {
        a +=   1;
        a -=   1;
        a *=   1;
        a /=   1;
        a %=   1;
        a &=   1;
        a |=   1;
        a ^=   1;
        a <<=  1;
        a >>=  1;
        a <<<= 1;
        a >>>= 1;
    }
}
